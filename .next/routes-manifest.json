{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/[locale]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/about",
      "regex": "^/([^/]+?)/about(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/about(?:/)?$"
    },
    {
      "page": "/[locale]/cart",
      "regex": "^/([^/]+?)/cart(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/cart(?:/)?$"
    },
    {
      "page": "/[locale]/conditions",
      "regex": "^/([^/]+?)/conditions(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/conditions(?:/)?$"
    },
    {
      "page": "/[locale]/contacts",
      "regex": "^/([^/]+?)/contacts(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/contacts(?:/)?$"
    },
    {
      "page": "/[locale]/criteria-diler",
      "regex": "^/([^/]+?)/criteria\\-diler(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/criteria\\-diler(?:/)?$"
    },
    {
      "page": "/[locale]/criteria-instructor",
      "regex": "^/([^/]+?)/criteria\\-instructor(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/criteria\\-instructor(?:/)?$"
    },
    {
      "page": "/[locale]/dealers",
      "regex": "^/([^/]+?)/dealers(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/dealers(?:/)?$"
    },
    {
      "page": "/[locale]/dilers-form",
      "regex": "^/([^/]+?)/dilers\\-form(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/dilers\\-form(?:/)?$"
    },
    {
      "page": "/[locale]/faq",
      "regex": "^/([^/]+?)/faq(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/faq(?:/)?$"
    },
    {
      "page": "/[locale]/feeto-care",
      "regex": "^/([^/]+?)/feeto\\-care(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/feeto\\-care(?:/)?$"
    },
    {
      "page": "/[locale]/galery",
      "regex": "^/([^/]+?)/galery(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/galery(?:/)?$"
    },
    {
      "page": "/[locale]/instructors",
      "regex": "^/([^/]+?)/instructors(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/instructors(?:/)?$"
    },
    {
      "page": "/[locale]/instructors-form",
      "regex": "^/([^/]+?)/instructors\\-form(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/instructors\\-form(?:/)?$"
    },
    {
      "page": "/[locale]/professional-feet",
      "regex": "^/([^/]+?)/professional\\-feet(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/professional\\-feet(?:/)?$"
    },
    {
      "page": "/[locale]/professional-feet/[slug]",
      "regex": "^/([^/]+?)/professional\\-feet/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale",
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/professional\\-feet/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/profile",
      "regex": "^/([^/]+?)/profile(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/profile(?:/)?$"
    },
    {
      "page": "/[locale]/quick-order",
      "regex": "^/([^/]+?)/quick\\-order(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/quick\\-order(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}